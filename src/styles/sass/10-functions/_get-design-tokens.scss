@use "../00-design-tokens/colors" as *;
@use "../00-design-tokens/fonts" as *;
@use "../00-design-tokens/spacing.scss" as *;
@use "../00-design-tokens/text-leading.scss" as *;
@use "../00-design-tokens/text-sizes.scss" as *;
@use "../00-design-tokens/text-weights.scss" as *;
@use "../00-design-tokens/viewports.scss" as *;

/**
 * This function returns a map where each key is a CSS property (e.g., "space-size", "font-size") 
 * and each value is another map. This nested map contains two keys: "token" and "prefix".
 *
 * The "token" key corresponds to the imported map of design tokens (e.g., $spacing, $text-sizes), 
 * and the "prefix" key corresponds to the string that will be prepended to each key when 
 * generating CSS custom properties (e.g., "space", "size-step").
 *
 * @returns {map} A map where each key is a CSS property and each value is another map 
 * containing the corresponding design token and its CSS custom property prefix.
 */

@function getDesignTokens() {
  $property: (
    "color": (
      "token": $colors,
      "prefix": "color",
    ),
    "space-size": (
      "token": $spacing,
      "prefix": "space",
    ),
    "font-size": (
      "token": $text-sizes,
      "prefix": "size-step",
    ),
    "font-family": (
      "token": $fonts,
      "prefix": "font",
    ),
    "font-weight": (
      "token": $text-weights,
      "prefix": "font",
    ),
    "line-height": (
      "token": $text-leading,
      "prefix": "leading",
    ),
  );
  @return $property;
}
