@use "../10-functions/get-design-tokens" as get;

/**
 * Retrieves a CSS custom property for a given variable name and key. 
 * It fetches the design tokens map, then searches for the variable name 
 * to find the associated variable and CSS custom property prefix.
 * If the key exists within the variable, it returns a CSS custom property 
 * combining the prefix and the key. If the variable name or the key doesn't 
 * exist, it throws an error.
 *
 * @param {string} $variableName - The variable name to look up.
 * @param {string} $value - The key within the variable to look up.
 * @returns {string} The CSS custom property associated with the variable and key.
 * @throws {error} If the variable name or the key doesn't exist.
 */

@function get($variableName: null, $value: null) {
  @if $variableName ==
    null or
    map-has-key(get.design-tokens(), $variableName) ==
    false
  {
    $validOptions: map-keys(get.design-tokens());
    @error "Variable `#{$variableName}` is either missing or not found in `$index` map. Please provide a valid variable name. Valid options are: `#{$validOptions}`.";
  }
  $variable: map-get(map-get(get.design-tokens(), $variableName), "variable");
  @if $value == null or map-has-key($variable, $value) == false {
    $validOptions: map-keys($variable);
    @error "Value `#{$value}` is either missing or not found in the `#{$variableName}` map. Please provide a valid value. Valid options are: `#{$validOptions}`.";
  }
  $prefix: map-get(map-get(get.design-tokens(), $variableName), "prefix");
  @return var(--#{$prefix}-#{$value});
}
