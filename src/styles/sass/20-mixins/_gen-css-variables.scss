@use "../10-functions/get-design-tokens" as get;

/**
 * Takes a SCSS map of design tokens and a prefix string, and generates CSS 
 * custom properties (also known as CSS variables) based on them. 
 *
 * The mixin iterates over the design tokens in the SCSS map, and for each 
 * key-value pair, it generates a CSS variable. The CSS variable's name is 
 * formed by concatenating the prefix string and the key, and its value is the 
 * corresponding value from the map.
 *
 * @param {map} $variable - A SCSS map of design tokens to generate CSS variables from.
 * @param {string} $prefix - A string that will be prepended to each key from 
 * the $variable map to form the CSS variable name.
 */

@mixin css-variables() {
  @each $variableName, $data in get.design-tokens() {
    $variable: map-get($data, "variable");
    $prefix: map-get($data, "prefix");

    @if $variable == null {
      @error "Variable is missing. Please provide a map when including the mixin.";
    }
    @if type-of($variable) != map {
      @error "Variable is not of type map. Please provide a map when including the mixin.";
    }
    @if $prefix == null {
      @error "Prefix is missing. Please provide a prefix as a string when including the mixin.";
    }
    @each $key, $value in $variable {
      --#{$prefix}-#{$key}: #{$value};
    }
  }
}
