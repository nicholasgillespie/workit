/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */

.l-grid {
  $grid-min-item-size: 16rem;
  $grid-gap: var(--gutter, 1rem); // ???

  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fit),
    minmax(min(var(--grid-min-item-size, $grid-min-item-size), 100%), 1fr)
  );
  grid-gap: var(--grid-gap, $grid-gap);

  &[data-rows="masonry"] {
    grid-template-rows: masonry;
    align-items: start;
  }

  /* A split 50/50 layout */
  &[data-layout="halves"] {
    --grid-ram-placement: auto-fit;
    --grid-min-item-size: clamp(
      #{$grid-min-item-size},
      50vw,
      #{$grid-min-item-size * 2}
    );
  }

  /* Three column grid layout */
  &[data-layout="thirds"] {
    --grid-placement: auto-fit;
    --grid-min-item-size: clamp(#{$grid-min-item-size}, 33%, 20rem);
  }
}
